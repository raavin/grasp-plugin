// This file is generated by omniidl (C++ backend) - omniORB_4_1. Do not edit.

#include "GraspController.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_1_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::TypeCode_ptr _0RL_tc_GraspPlanStart_mDblSequence3 = CORBA::TypeCode::PR_alias_tc("IDL:GraspPlanStart/DblSequence3:1.0", "DblSequence3", CORBA::TypeCode::PR_sequence_tc(3, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr GraspPlanStart::_tc_DblSequence3 = _0RL_tc_GraspPlanStart_mDblSequence3;

static CORBA::TypeCode_ptr _0RL_tc_GraspPlanStart_mDblSequence9 = CORBA::TypeCode::PR_alias_tc("IDL:GraspPlanStart/DblSequence9:1.0", "DblSequence9", CORBA::TypeCode::PR_sequence_tc(9, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr GraspPlanStart::_tc_DblSequence9 = _0RL_tc_GraspPlanStart_mDblSequence9;

const CORBA::TypeCode_ptr _tc_GraspPlanStart = CORBA::TypeCode::PR_interface_tc("IDL:GraspPlanStart:1.0", "GraspPlanStart", &_0RL_tcTrack);

static CORBA::TypeCode_ptr _0RL_tc_GraspPlanResult_mDblSequence3 = CORBA::TypeCode::PR_alias_tc("IDL:GraspPlanResult/DblSequence3:1.0", "DblSequence3", CORBA::TypeCode::PR_sequence_tc(3, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr GraspPlanResult::_tc_DblSequence3 = _0RL_tc_GraspPlanResult_mDblSequence3;

static CORBA::TypeCode_ptr _0RL_tc_GraspPlanResult_mDblSequence9 = CORBA::TypeCode::PR_alias_tc("IDL:GraspPlanResult/DblSequence9:1.0", "DblSequence9", CORBA::TypeCode::PR_sequence_tc(9, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr GraspPlanResult::_tc_DblSequence9 = _0RL_tc_GraspPlanResult_mDblSequence9;

const CORBA::TypeCode_ptr _tc_GraspPlanResult = CORBA::TypeCode::PR_interface_tc("IDL:GraspPlanResult:1.0", "GraspPlanResult", &_0RL_tcTrack);

static void _0RL_GraspPlanStart_mDblSequence3_marshal_fn(cdrStream& _s, void* _v)
{
  GraspPlanStart::DblSequence3* _p = (GraspPlanStart::DblSequence3*)_v;
  *_p >>= _s;
}
static void _0RL_GraspPlanStart_mDblSequence3_unmarshal_fn(cdrStream& _s, void*& _v)
{
  GraspPlanStart::DblSequence3* _p = new GraspPlanStart::DblSequence3;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_GraspPlanStart_mDblSequence3_destructor_fn(void* _v)
{
  GraspPlanStart::DblSequence3* _p = (GraspPlanStart::DblSequence3*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const GraspPlanStart::DblSequence3& _s)
{
  GraspPlanStart::DblSequence3* _p = new GraspPlanStart::DblSequence3(_s);
  _a.PR_insert(_0RL_tc_GraspPlanStart_mDblSequence3,
               _0RL_GraspPlanStart_mDblSequence3_marshal_fn,
               _0RL_GraspPlanStart_mDblSequence3_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, GraspPlanStart::DblSequence3* _sp)
{
  _a.PR_insert(_0RL_tc_GraspPlanStart_mDblSequence3,
               _0RL_GraspPlanStart_mDblSequence3_marshal_fn,
               _0RL_GraspPlanStart_mDblSequence3_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanStart::DblSequence3*& _sp)
{
  return _a >>= (const GraspPlanStart::DblSequence3*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const GraspPlanStart::DblSequence3*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_GraspPlanStart_mDblSequence3,
                    _0RL_GraspPlanStart_mDblSequence3_unmarshal_fn,
                    _0RL_GraspPlanStart_mDblSequence3_marshal_fn,
                    _0RL_GraspPlanStart_mDblSequence3_destructor_fn,
                    _v)) {
    _sp = (const GraspPlanStart::DblSequence3*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_GraspPlanStart_mDblSequence9_marshal_fn(cdrStream& _s, void* _v)
{
  GraspPlanStart::DblSequence9* _p = (GraspPlanStart::DblSequence9*)_v;
  *_p >>= _s;
}
static void _0RL_GraspPlanStart_mDblSequence9_unmarshal_fn(cdrStream& _s, void*& _v)
{
  GraspPlanStart::DblSequence9* _p = new GraspPlanStart::DblSequence9;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_GraspPlanStart_mDblSequence9_destructor_fn(void* _v)
{
  GraspPlanStart::DblSequence9* _p = (GraspPlanStart::DblSequence9*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const GraspPlanStart::DblSequence9& _s)
{
  GraspPlanStart::DblSequence9* _p = new GraspPlanStart::DblSequence9(_s);
  _a.PR_insert(_0RL_tc_GraspPlanStart_mDblSequence9,
               _0RL_GraspPlanStart_mDblSequence9_marshal_fn,
               _0RL_GraspPlanStart_mDblSequence9_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, GraspPlanStart::DblSequence9* _sp)
{
  _a.PR_insert(_0RL_tc_GraspPlanStart_mDblSequence9,
               _0RL_GraspPlanStart_mDblSequence9_marshal_fn,
               _0RL_GraspPlanStart_mDblSequence9_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanStart::DblSequence9*& _sp)
{
  return _a >>= (const GraspPlanStart::DblSequence9*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const GraspPlanStart::DblSequence9*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_GraspPlanStart_mDblSequence9,
                    _0RL_GraspPlanStart_mDblSequence9_unmarshal_fn,
                    _0RL_GraspPlanStart_mDblSequence9_marshal_fn,
                    _0RL_GraspPlanStart_mDblSequence9_destructor_fn,
                    _v)) {
    _sp = (const GraspPlanStart::DblSequence9*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_GraspPlanStart_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_GraspPlanStart_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(GraspPlanStart::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_GraspPlanStart_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, GraspPlanStart_ptr _o)
{
  GraspPlanStart_ptr _no = GraspPlanStart::_duplicate(_o);
  _a.PR_insert(_tc_GraspPlanStart,
               _0RL_GraspPlanStart_marshal_fn,
               _0RL_GraspPlanStart_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, GraspPlanStart_ptr* _op)
{
  _a.PR_insert(_tc_GraspPlanStart,
               _0RL_GraspPlanStart_marshal_fn,
               _0RL_GraspPlanStart_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = GraspPlanStart::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanStart_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(_tc_GraspPlanStart,
                    _0RL_GraspPlanStart_unmarshal_fn,
                    _0RL_GraspPlanStart_marshal_fn,
                    _0RL_GraspPlanStart_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (GraspPlanStart_ptr)_r->_ptrToObjRef(GraspPlanStart::_PD_repoId);
    else
      _o = GraspPlanStart::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_GraspPlanResult_mDblSequence3_marshal_fn(cdrStream& _s, void* _v)
{
  GraspPlanResult::DblSequence3* _p = (GraspPlanResult::DblSequence3*)_v;
  *_p >>= _s;
}
static void _0RL_GraspPlanResult_mDblSequence3_unmarshal_fn(cdrStream& _s, void*& _v)
{
  GraspPlanResult::DblSequence3* _p = new GraspPlanResult::DblSequence3;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_GraspPlanResult_mDblSequence3_destructor_fn(void* _v)
{
  GraspPlanResult::DblSequence3* _p = (GraspPlanResult::DblSequence3*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const GraspPlanResult::DblSequence3& _s)
{
  GraspPlanResult::DblSequence3* _p = new GraspPlanResult::DblSequence3(_s);
  _a.PR_insert(_0RL_tc_GraspPlanResult_mDblSequence3,
               _0RL_GraspPlanResult_mDblSequence3_marshal_fn,
               _0RL_GraspPlanResult_mDblSequence3_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, GraspPlanResult::DblSequence3* _sp)
{
  _a.PR_insert(_0RL_tc_GraspPlanResult_mDblSequence3,
               _0RL_GraspPlanResult_mDblSequence3_marshal_fn,
               _0RL_GraspPlanResult_mDblSequence3_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanResult::DblSequence3*& _sp)
{
  return _a >>= (const GraspPlanResult::DblSequence3*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const GraspPlanResult::DblSequence3*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_GraspPlanResult_mDblSequence3,
                    _0RL_GraspPlanResult_mDblSequence3_unmarshal_fn,
                    _0RL_GraspPlanResult_mDblSequence3_marshal_fn,
                    _0RL_GraspPlanResult_mDblSequence3_destructor_fn,
                    _v)) {
    _sp = (const GraspPlanResult::DblSequence3*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_GraspPlanResult_mDblSequence9_marshal_fn(cdrStream& _s, void* _v)
{
  GraspPlanResult::DblSequence9* _p = (GraspPlanResult::DblSequence9*)_v;
  *_p >>= _s;
}
static void _0RL_GraspPlanResult_mDblSequence9_unmarshal_fn(cdrStream& _s, void*& _v)
{
  GraspPlanResult::DblSequence9* _p = new GraspPlanResult::DblSequence9;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_GraspPlanResult_mDblSequence9_destructor_fn(void* _v)
{
  GraspPlanResult::DblSequence9* _p = (GraspPlanResult::DblSequence9*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const GraspPlanResult::DblSequence9& _s)
{
  GraspPlanResult::DblSequence9* _p = new GraspPlanResult::DblSequence9(_s);
  _a.PR_insert(_0RL_tc_GraspPlanResult_mDblSequence9,
               _0RL_GraspPlanResult_mDblSequence9_marshal_fn,
               _0RL_GraspPlanResult_mDblSequence9_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, GraspPlanResult::DblSequence9* _sp)
{
  _a.PR_insert(_0RL_tc_GraspPlanResult_mDblSequence9,
               _0RL_GraspPlanResult_mDblSequence9_marshal_fn,
               _0RL_GraspPlanResult_mDblSequence9_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanResult::DblSequence9*& _sp)
{
  return _a >>= (const GraspPlanResult::DblSequence9*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const GraspPlanResult::DblSequence9*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_GraspPlanResult_mDblSequence9,
                    _0RL_GraspPlanResult_mDblSequence9_unmarshal_fn,
                    _0RL_GraspPlanResult_mDblSequence9_marshal_fn,
                    _0RL_GraspPlanResult_mDblSequence9_destructor_fn,
                    _v)) {
    _sp = (const GraspPlanResult::DblSequence9*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_GraspPlanResult_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_GraspPlanResult_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(GraspPlanResult::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_GraspPlanResult_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, GraspPlanResult_ptr _o)
{
  GraspPlanResult_ptr _no = GraspPlanResult::_duplicate(_o);
  _a.PR_insert(_tc_GraspPlanResult,
               _0RL_GraspPlanResult_marshal_fn,
               _0RL_GraspPlanResult_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, GraspPlanResult_ptr* _op)
{
  _a.PR_insert(_tc_GraspPlanResult,
               _0RL_GraspPlanResult_marshal_fn,
               _0RL_GraspPlanResult_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = GraspPlanResult::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, GraspPlanResult_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(_tc_GraspPlanResult,
                    _0RL_GraspPlanResult_unmarshal_fn,
                    _0RL_GraspPlanResult_marshal_fn,
                    _0RL_GraspPlanResult_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (GraspPlanResult_ptr)_r->_ptrToObjRef(GraspPlanResult::_PD_repoId);
    else
      _o = GraspPlanResult::_nil();
    return 1;
  }
  return 0;
}

