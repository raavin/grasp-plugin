// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "HiroNX.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



HiroNX_ptr HiroNX_Helper::_nil() {
  return ::HiroNX::_nil();
}

::CORBA::Boolean HiroNX_Helper::is_nil(::HiroNX_ptr p) {
  return ::CORBA::is_nil(p);

}

void HiroNX_Helper::release(::HiroNX_ptr p) {
  ::CORBA::release(p);
}

void HiroNX_Helper::marshalObjRef(::HiroNX_ptr obj, cdrStream& s) {
  ::HiroNX::_marshalObjRef(obj, s);
}

HiroNX_ptr HiroNX_Helper::unmarshalObjRef(cdrStream& s) {
  return ::HiroNX::_unmarshalObjRef(s);
}

void HiroNX_Helper::duplicate(::HiroNX_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

HiroNX_ptr
HiroNX::_duplicate(::HiroNX_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

HiroNX_ptr
HiroNX::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


HiroNX_ptr
HiroNX::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

HiroNX_ptr
HiroNX::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_HiroNX _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_HiroNX* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_HiroNX;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* HiroNX::_PD_repoId = "IDL:HiroNX:1.0";


_objref_HiroNX::~_objref_HiroNX() {
  
}


_objref_HiroNX::_objref_HiroNX(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::HiroNX::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_HiroNX::_ptrToObjRef(const char* id)
{
  if( id == ::HiroNX::_PD_repoId )
    return (::HiroNX_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::HiroNX::_PD_repoId) )
    return (::HiroNX_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_b323081cd8c43785_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b323081cd8c43785_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_10000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->setupRobot();


}

void _objref_HiroNX::setupRobot()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_10000000, "setupRobot", 11);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_20000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->restart();


}

void _objref_HiroNX::restart()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_20000000, "restart", 8);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_30000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->goInitial();


}

void _objref_HiroNX::goInitial()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_30000000, "goInitial", 10);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_40000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->goOffPose();


}

void _objref_HiroNX::goOffPose()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_40000000, "goOffPose", 10);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_50000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->servoOn();


}

void _objref_HiroNX::servoOn()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_50000000, "servoOn", 8);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_60000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->servoOff();


}

void _objref_HiroNX::servoOff()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_60000000, "servoOff", 9);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_70000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->calibrateJoint();


}

void _objref_HiroNX::calibrateJoint()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_70000000, "calibrateJoint", 15);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_80000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->servoOnHands();


}

void _objref_HiroNX::servoOnHands()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_80000000, "servoOnHands", 13);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_90000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->servoOffHands();


}

void _objref_HiroNX::servoOffHands()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_90000000, "servoOffHands", 14);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_a0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->EngageProtectiveStop();


}

void _objref_HiroNX::EngageProtectiveStop()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_a0000000, "EngageProtectiveStop", 21);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_b0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->DisengageProtectiveStop();


}

void _objref_HiroNX::DisengageProtectiveStop()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_b0000000, "DisengageProtectiveStop", 24);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_c0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->reboot();


}

void _objref_HiroNX::reboot()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_c0000000, "reboot", 7);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_d0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->shutdown();


}

void _objref_HiroNX::shutdown()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_d0000000, "shutdown", 9);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_e0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->rhandOpen();


}

void _objref_HiroNX::rhandOpen()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_e0000000, "rhandOpen", 10);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_f0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->rhandClose();


}

void _objref_HiroNX::rhandClose()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_f0000000, "rhandClose", 11);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_01000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->lhandOpen();


}

void _objref_HiroNX::lhandOpen()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_01000000, "lhandOpen", 10);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b323081cd8c43785_11000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_HiroNX* impl = (_impl_HiroNX*) svnt->_ptrToInterface(HiroNX::_PD_repoId);
  impl->lhandClose();


}

void _objref_HiroNX::lhandClose()
{
  _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_11000000, "lhandClose", 11);


  _invoke(_call_desc);



}
_pof_HiroNX::~_pof_HiroNX() {}


omniObjRef*
_pof_HiroNX::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_HiroNX(ior, id);
}


::CORBA::Boolean
_pof_HiroNX::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::HiroNX::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_HiroNX _the_pof_HiroNX;

_impl_HiroNX::~_impl_HiroNX() {}


::CORBA::Boolean
_impl_HiroNX::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setupRobot") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_10000000, "setupRobot", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "restart") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_20000000, "restart", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "goInitial") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_30000000, "goInitial", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "goOffPose") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_40000000, "goOffPose", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOn") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_50000000, "servoOn", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOff") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_60000000, "servoOff", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "calibrateJoint") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_70000000, "calibrateJoint", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOnHands") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_80000000, "servoOnHands", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOffHands") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_90000000, "servoOffHands", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "EngageProtectiveStop") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_a0000000, "EngageProtectiveStop", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "DisengageProtectiveStop") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_b0000000, "DisengageProtectiveStop", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "reboot") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_c0000000, "reboot", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "shutdown") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_d0000000, "shutdown", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "rhandOpen") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_e0000000, "rhandOpen", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "rhandClose") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_f0000000, "rhandClose", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "lhandOpen") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_01000000, "lhandOpen", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "lhandClose") ) {

    _0RL_cd_b323081cd8c43785_00000000 _call_desc(_0RL_lcfn_b323081cd8c43785_11000000, "lhandClose", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_HiroNX::_ptrToInterface(const char* id)
{
  if( id == ::HiroNX::_PD_repoId )
    return (::_impl_HiroNX*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::HiroNX::_PD_repoId) )
    return (::_impl_HiroNX*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_HiroNX::_mostDerivedRepoId()
{
  return ::HiroNX::_PD_repoId;
}

POA_HiroNX::~POA_HiroNX() {}

