// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "RecognitionService.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



RecognitionService_ptr RecognitionService_Helper::_nil() {
  return ::RecognitionService::_nil();
}

::CORBA::Boolean RecognitionService_Helper::is_nil(::RecognitionService_ptr p) {
  return ::CORBA::is_nil(p);

}

void RecognitionService_Helper::release(::RecognitionService_ptr p) {
  ::CORBA::release(p);
}

void RecognitionService_Helper::marshalObjRef(::RecognitionService_ptr obj, cdrStream& s) {
  ::RecognitionService::_marshalObjRef(obj, s);
}

RecognitionService_ptr RecognitionService_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RecognitionService::_unmarshalObjRef(s);
}

void RecognitionService_Helper::duplicate(::RecognitionService_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RecognitionService_ptr
RecognitionService::_duplicate(::RecognitionService_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RecognitionService_ptr
RecognitionService::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RecognitionService_ptr
RecognitionService::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RecognitionService_ptr
RecognitionService::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RecognitionService _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RecognitionService* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RecognitionService;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RecognitionService::_PD_repoId = "IDL:RecognitionService:1.0";


_objref_RecognitionService::~_objref_RecognitionService() {
  
}


_objref_RecognitionService::_objref_RecognitionService(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RecognitionService::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_RecognitionService::_ptrToObjRef(const char* id)
{
  if( id == ::RecognitionService::_PD_repoId )
    return (::RecognitionService_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RecognitionService::_PD_repoId) )
    return (::RecognitionService_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _clong
class _0RL_cd_a0438ec6f34bca18_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_a0438ec6f34bca18_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Long result;
};

void _0RL_cd_a0438ec6f34bca18_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_a0438ec6f34bca18_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_a0438ec6f34bca18_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_a0438ec6f34bca18_00000000* tcd = (_0RL_cd_a0438ec6f34bca18_00000000*)cd;
  _impl_RecognitionService* impl = (_impl_RecognitionService*) svnt->_ptrToInterface(RecognitionService::_PD_repoId);
  tcd->result = impl->getModelID();


}

::CORBA::Long _objref_RecognitionService::getModelID()
{
  _0RL_cd_a0438ec6f34bca18_00000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_10000000, "getModelID", 11);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_clong
class _0RL_cd_a0438ec6f34bca18_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_a0438ec6f34bca18_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  ::CORBA::Long arg_0;
};

void _0RL_cd_a0438ec6f34bca18_20000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_a0438ec6f34bca18_20000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_a0438ec6f34bca18_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_a0438ec6f34bca18_20000000* tcd = (_0RL_cd_a0438ec6f34bca18_20000000*)cd;
  _impl_RecognitionService* impl = (_impl_RecognitionService*) svnt->_ptrToInterface(RecognitionService::_PD_repoId);
  impl->setModelID(tcd->arg_0);


}

void _objref_RecognitionService::setModelID(::CORBA::Long ModelID)
{
  _0RL_cd_a0438ec6f34bca18_20000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_30000000, "setModelID", 11);
  _call_desc.arg_0 = ModelID;

  _invoke(_call_desc);



}
_pof_RecognitionService::~_pof_RecognitionService() {}


omniObjRef*
_pof_RecognitionService::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_RecognitionService(ior, id);
}


::CORBA::Boolean
_pof_RecognitionService::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RecognitionService::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_RecognitionService _the_pof_RecognitionService;

_impl_RecognitionService::~_impl_RecognitionService() {}


::CORBA::Boolean
_impl_RecognitionService::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getModelID") ) {

    _0RL_cd_a0438ec6f34bca18_00000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_10000000, "getModelID", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setModelID") ) {

    _0RL_cd_a0438ec6f34bca18_20000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_30000000, "setModelID", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_RecognitionService::_ptrToInterface(const char* id)
{
  if( id == ::RecognitionService::_PD_repoId )
    return (::_impl_RecognitionService*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RecognitionService::_PD_repoId) )
    return (::_impl_RecognitionService*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_RecognitionService::_mostDerivedRepoId()
{
  return ::RecognitionService::_PD_repoId;
}

RecognitionServiceSDL_ptr RecognitionServiceSDL_Helper::_nil() {
  return ::RecognitionServiceSDL::_nil();
}

::CORBA::Boolean RecognitionServiceSDL_Helper::is_nil(::RecognitionServiceSDL_ptr p) {
  return ::CORBA::is_nil(p);

}

void RecognitionServiceSDL_Helper::release(::RecognitionServiceSDL_ptr p) {
  ::CORBA::release(p);
}

void RecognitionServiceSDL_Helper::marshalObjRef(::RecognitionServiceSDL_ptr obj, cdrStream& s) {
  ::RecognitionServiceSDL::_marshalObjRef(obj, s);
}

RecognitionServiceSDL_ptr RecognitionServiceSDL_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RecognitionServiceSDL::_unmarshalObjRef(s);
}

void RecognitionServiceSDL_Helper::duplicate(::RecognitionServiceSDL_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RecognitionServiceSDL_ptr
RecognitionServiceSDL::_duplicate(::RecognitionServiceSDL_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RecognitionServiceSDL_ptr
RecognitionServiceSDL::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RecognitionServiceSDL_ptr
RecognitionServiceSDL::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RecognitionServiceSDL_ptr
RecognitionServiceSDL::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RecognitionServiceSDL _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RecognitionServiceSDL* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RecognitionServiceSDL;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RecognitionServiceSDL::_PD_repoId = "IDL:RecognitionServiceSDL:1.0";


_objref_RecognitionServiceSDL::~_objref_RecognitionServiceSDL() {
  
}


_objref_RecognitionServiceSDL::_objref_RecognitionServiceSDL(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RecognitionServiceSDL::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_RecognitionServiceSDL::_ptrToObjRef(const char* id)
{
  if( id == ::RecognitionServiceSDL::_PD_repoId )
    return (::RecognitionServiceSDL_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RecognitionServiceSDL::_PD_repoId) )
    return (::RecognitionServiceSDL_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_o_cRTC_mTimedDoubleSeq
class _0RL_cd_a0438ec6f34bca18_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_a0438ec6f34bca18_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Long arg_0;
  RTC::TimedDoubleSeq_var arg_1;
};

void _0RL_cd_a0438ec6f34bca18_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_a0438ec6f34bca18_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_a0438ec6f34bca18_40000000::marshalReturnedValues(cdrStream& _n)
{
  (const RTC::TimedDoubleSeq&) arg_1 >>= _n;

}

void _0RL_cd_a0438ec6f34bca18_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_1 = new RTC::TimedDoubleSeq;
  (RTC::TimedDoubleSeq&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_a0438ec6f34bca18_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_a0438ec6f34bca18_40000000* tcd = (_0RL_cd_a0438ec6f34bca18_40000000*)cd;
  _impl_RecognitionServiceSDL* impl = (_impl_RecognitionServiceSDL*) svnt->_ptrToInterface(RecognitionServiceSDL::_PD_repoId);
  impl->recognize_by_ID(tcd->arg_0, tcd->arg_1.out());


}

void _objref_RecognitionServiceSDL::recognize_by_ID(::CORBA::Long ModelID, RTC::TimedDoubleSeq_out Result)
{
  _0RL_cd_a0438ec6f34bca18_40000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_50000000, "recognize_by_ID", 16);
  _call_desc.arg_0 = ModelID;

  _invoke(_call_desc);
  Result = _call_desc.arg_1._retn();


}
_pof_RecognitionServiceSDL::~_pof_RecognitionServiceSDL() {}


omniObjRef*
_pof_RecognitionServiceSDL::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_RecognitionServiceSDL(ior, id);
}


::CORBA::Boolean
_pof_RecognitionServiceSDL::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RecognitionServiceSDL::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_RecognitionServiceSDL _the_pof_RecognitionServiceSDL;

_impl_RecognitionServiceSDL::~_impl_RecognitionServiceSDL() {}


::CORBA::Boolean
_impl_RecognitionServiceSDL::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "recognize_by_ID") ) {

    _0RL_cd_a0438ec6f34bca18_40000000 _call_desc(_0RL_lcfn_a0438ec6f34bca18_50000000, "recognize_by_ID", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_RecognitionServiceSDL::_ptrToInterface(const char* id)
{
  if( id == ::RecognitionServiceSDL::_PD_repoId )
    return (::_impl_RecognitionServiceSDL*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RecognitionServiceSDL::_PD_repoId) )
    return (::_impl_RecognitionServiceSDL*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_RecognitionServiceSDL::_mostDerivedRepoId()
{
  return ::RecognitionServiceSDL::_PD_repoId;
}

POA_RecognitionService::~POA_RecognitionService() {}

POA_RecognitionServiceSDL::~POA_RecognitionServiceSDL() {}

